{"version":3,"sources":["redux/actions/index.js","pages/Movies.js","pages/Detail.js","redux/reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","debounceLoadMore","debounce","page","searchTerm","dispatch","axios","get","params","type","s","then","response","data","Error","payload","Search","connect","state","appState","getMovies","getState","loadMoreMovies","updateSearchTerm","text","clearMoviesList","props","history","useHistory","useState","setSearchTerm","useEffect","window","addEventListener","event","innerHeight","scrollY","target","body","offsetHeight","removeEventListener","onscroll","handleErrorLoadImage","e","src","className","Row","Col","sm","span","offset","Form","Control","placeholder","value","onChange","xs","Button","variant","onClick","movies","map","movie","md","lg","style","cursor","Card","id","imdbID","push","Img","Poster","onError","Title","title","length","slice","detail","getDetailMovie","i","clearDetailState","useParams","Plot","Actors","Runtime","Writer","Released","Production","Rated","Metascore","Header","as","Body","Footer","initialState","store","createStore","action","applyMiddleware","thunk","App","Container","basename","process","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b448d5.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { debounce } from 'lodash';\r\n\r\nconst apiKey = 'ee412a3a';\r\n\r\nexport const updateSearchTerm = text => {\r\n  return dispatch => {\r\n    dispatch({ type: \"UPDATE_SEARCH_TERM\", payload: text })\r\n  }\r\n}\r\n\r\nexport const clearMoviesList = () => {\r\n  return {\r\n    type: 'CLEAR_MOVIES_LIST'\r\n  }\r\n}\r\n\r\nconst debounceLoadMore = debounce((page, searchTerm, dispatch) => {\r\n  axios.get(\"https://www.omdbapi.com/\", {\r\n    params: {\r\n      type: 'movie',\r\n      s: searchTerm,\r\n      apiKey,\r\n      page\r\n    }\r\n  }).then((response) => {\r\n    const { data } = response;\r\n    if (!data.Error) {\r\n      dispatch({ type: \"GET_MOVIES\", payload: data.Search });\r\n      dispatch({ type: \"UPDATE_PAGE_INDEX\", payload: page })\r\n    }\r\n  })\r\n}, 200);\r\n\r\nexport const loadMoreMovies = () => {\r\n  return (dispatch, getState) => {\r\n    const { page, searchTerm } = getState();\r\n    debounceLoadMore(page + 1, searchTerm, dispatch);\r\n  }\r\n}\r\n\r\nexport const getMovies = () => {\r\n  return (dispatch, getState) => {\r\n    const { searchTerm } = getState();\r\n    axios.get(\"https://www.omdbapi.com/\", {\r\n      params: {\r\n        type: 'movie',\r\n        s: searchTerm,\r\n        apiKey,\r\n        page: 1\r\n      }\r\n    }).then(({ data }) => {\r\n      dispatch({ type: \"GET_MOVIES\", payload: data.Search })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getDetailMovie = id => {\r\n  return dispatch => {\r\n    axios.get(\"https://www.omdbapi.com/\", {\r\n      params: {\r\n        type: 'movie',\r\n        apiKey,\r\n        i: id\r\n      }\r\n    }).then((response) => {\r\n      const { data } = response;\r\n      dispatch({ type: \"GET_DETAIL_MOVIE\", payload: data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearDetailState = () => {\r\n  return {\r\n    type: \"CLEAR_DETAIL_PAGE\"\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getMovies, loadMoreMovies, updateSearchTerm, clearMoviesList } from '../redux/actions';\r\n\r\nconst Movies = props => {\r\n  const history = useHistory();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const onScroll = (event) => {\r\n      if ((window.innerHeight + window.scrollY) >= event.target.body.offsetHeight - 10) {\r\n        props.loadMoreMovies();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => window.removeEventListener('scroll', onscroll)\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    props.updateSearchTerm(searchTerm);\r\n    props.clearMoviesList();\r\n    props.getMovies(searchTerm);\r\n  }\r\n\r\n  const onSearchTermChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  }\r\n\r\n  const formatTitle = title => title.length > 15 ? `${title.slice(0, 20)} ...` : title;\r\n\r\n  const handleErrorLoadImage = (e) => e.target.src = 'https://cdn.tgdd.vn/hoi-dap/580732/cach-khac-phuc-loi-404-not-found-3-1-800x300.jpg';\r\n\r\n  const handleDetailClick = (id) => {\r\n    history.push(`/${id}`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-4 mb-4\">\r\n        <Row>\r\n          <Col className=\"d-flex justify-content-center align-items-center\">\r\n            <h2>NETFLIX</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={{ span: 5, offset: 3}}>\r\n            <Form.Control className=\"mb-3\" placeholder=\"Type to search\" value={searchTerm} onChange={onSearchTermChange} />\r\n          </Col>\r\n          <Col xs={{ span: 4, offset: 5 }} sm={{ span: 1, offset: 0 }}>\r\n            <Button variant=\"primary\" onClick={handleSearch}>Search</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Row className=\"gx-4 gy-4\">\r\n        {props.appState.movies.map(movie => (\r\n          <Col sm={12} md={6} lg={4} style={{ cursor: \"pointer\"}}>\r\n            <Card onClick={() => handleDetailClick(movie.imdbID)} key={movie.imdbID}>\r\n              <Card.Img variant=\"top\" src={movie.Poster} onError={handleErrorLoadImage} />\r\n              <Card.Title className=\"p-2\">\r\n                {formatTitle(movie.Title)}\r\n              </Card.Title>\r\n              {/* <Button variant=\"primary\" onClick={() => handleDetailClick(movie.imdbID)}>View detail</Button> */}\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  appState: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getMovies: () => dispatch(getMovies()),\r\n    loadMoreMovies: () => dispatch(loadMoreMovies()),\r\n    updateSearchTerm: (text) => dispatch(updateSearchTerm(text)),\r\n    clearMoviesList: () => dispatch(clearMoviesList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Row, Col, Button } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getDetailMovie, clearDetailState } from '../redux/actions';\r\n\r\nconst Detail = (props) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getDetailMovie(id);\r\n  }, [id]);\r\n\r\n  const handleBack = () => {\r\n    props.clearDetailState();\r\n    history.push('/')\r\n  }\r\n\r\n  const { Title, Plot, Poster, Actors, Runtime, Writer, Released, Production, Rated, Metascore } = props.detail;\r\n\r\n  return (\r\n    <Card className=\"mt-3 mb-3\">\r\n      <Card.Header as=\"h2\">{Title}</Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col xs={{span: 12}} md={{ span: 6 }}>\r\n            <Card.Img src={Poster}></Card.Img>\r\n          </Col>\r\n          <Col xs={{span: 12}} md={{ span: 6 }}>\r\n            <Row>\r\n              <p><b>Plot:</b> {Plot}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Writers:</b> {Writer}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Actors: </b>{Actors}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Duration: </b>{Runtime}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Release: </b>{Released}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Producer: </b>{Production}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Rated: </b>{Rated}</p>\r\n            </Row>\r\n            <Row>\r\n              <p><b>Metascore: </b>{Metascore}</p>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n      <Button variant=\"danger\" onClick={handleBack}>Back to movies list</Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  detail: state.detail\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDetailMovie: (id) => dispatch(getDetailMovie(id)),\r\n    clearDetailState: () => dispatch(clearDetailState())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","const initialState = {\r\n  movies: [],\r\n  searchTerm: '',\r\n  page: 1,\r\n  detail: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case \"FAKE_GET_MOVIES\":\r\n      return {\r\n        ...state,\r\n        movies: [\"just a joke\"]\r\n      };\r\n    case \"GET_MOVIES\":\r\n      return {\r\n        ...state,\r\n        movies: [...state.movies, ...action.payload]\r\n      }\r\n    case \"UPDATE_SEARCH_TERM\":\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload\r\n      }\r\n    case \"UPDATE_PAGE_INDEX\":\r\n      return {\r\n        ...state,\r\n        page: action.payload\r\n      }\r\n    case \"CLEAR_MOVIES_LIST\":\r\n      return {\r\n        ...state,\r\n        movies: []\r\n      }\r\n    case \"GET_DETAIL_MOVIE\":\r\n      return {\r\n        ...state,\r\n        detail: action.payload\r\n      }\r\n    case \"CLEAR_DETAIL_PAGE\":\r\n      return {\r\n        ...state,\r\n        detail: {}\r\n      }\r\n    default:\r\n      return state\r\n    }\r\n}","import { Container } from 'react-bootstrap';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Movies from './pages/Movies';\nimport Detail from './pages/Detail';\nimport rootReducer from './redux/reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container>\n        <Router basename={process.env.PUBLIC_URL}>\n          <>\n            <Switch>\n              <Route path=\"/\">\n                <Movies />\n              </Route>\n              <Route path=\"/:id\">\n                <Detail />\n              </Route>\n            </Switch>\n          </>\n        </Router>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}